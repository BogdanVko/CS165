/**
 * Content originated from Kushagra Tiwary, 10/30/2016
 * Modified by garethhalladay on 9/12/17
 *
 * Use point1.distance(point2) to find the distance between two Point objects.
 * side1 is the distance between Points a and b.
 * side2 is the distance between Points b and c.
 * side3 is the distance between Points c and a.
 */
public class Triangle extends Shape {

    private Point a;
    private Point b;
    private Point c;

    public Triangle(Point a,
    				Point b,
    				Point c) {
    	this.a = a;
    	this.b = b;
    	this.c = c;
    	
    	
    }
    /**
     * Compares this triangle to a specified object. The result is true
     * if and only if the argument is not null and is a Triangle object
     * that represents the same sequence of Points as this object.
     * @param o the object to compare the triangle against
     * @return true if the given object represents a triangle equivalent to this triangle, false otherwise
     */
    @Override
    public boolean equals(Object o) {
        if(this == o) return true;
        if (!(o instanceof Triangle)) return false;
        Triangle other = (Triangle) o;
        return a.equals(other.a) && b.equals(other.b) && c.equals(other.c);
    }

    /**
     * hashCode autogenerated using IntelliJ. Note the use of a prime number.
     * @return hashcode for the Triangle class.

     */
    
    public double getSide1() {return a.distance(b);}
    public double getSide2() {return b.distance(c);}
    public double getSide3() {return c.distance(a);}
    
    @Override
    
    public int hashCode() {
        int result = a.hashCode();
        result = 31 * result + b.hashCode();
        result = 31 * result + c.hashCode();
        return result;
    }

	@Override
	public double calculateArea() {
		
		double a = getSide1();
		double b = getSide2();
		double c = getSide3();
		double s = (a+b+c)/2;
		
		return Math.sqrt(s*(s-a)*(s-b)*(s-c));
		
	}

	@Override
	public double calculatePerimeter() {
		
		return getSide1()+ getSide2() + getSide3();
	}

    @Override
    public String toString() {
        return String.format("[side1 = %.2f, ", getSide1()) +
                String.format("side2 = %.2f, ", getSide2()) +
                String.format("side3 = %.2f, ", getSide3()) +
                String.format("area = %.2f, ", this.calculateArea()) +
                String.format("perimeter = %.2f]", this.calculatePerimeter());
    }

}
